<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emacs | EDOOFUS]]></title>
  <link href="http://kisom.github.com/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://kisom.github.com/"/>
  <updated>2012-11-21T22:57:32-07:00</updated>
  <id>http://kisom.github.com/</id>
  <author>
    <name><![CDATA[Kyle Isom]]></name>
    <email><![CDATA[coder@kyleisom.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clojure Development on OpenBSD]]></title>
    <link href="http://kisom.github.com/blog/2012/06/11/clojure-development-on-openbsd/"/>
    <updated>2012-06-11T18:24:00-06:00</updated>
    <id>http://kisom.github.com/blog/2012/06/11/clojure-development-on-openbsd</id>
    <content type="html"><![CDATA[<p>I was trying to get <a href="http://www.gnu.org/software/emacs/">emacs24</a> installed on
my <a href="http://www.openbsd.org">OpenBSD</a> box to work on some
<a href="http://www.clojure.org">Clojure</a>. Here's a quick rundown on getting started.</p>

<!-- more -->


<h2>Dependencies, or gathering provisions for the journey</h2>

<p>As with dealing with most of the GNU software packages, you'll want to install
devel/autoconf and textproc/textutils. Clojure requires java, so install the
JDK and JRE:</p>

<p><code>pkg_add -vi jdk jre autoconf textutils</code></p>

<h2>Installing emacs24, or taming the beast</h2>

<p>First things first, you'll want to download the emacs24 tarball. I had to tweak
the autoconf source, so after you apply the
<a href="/downloads/patch/emacs24-openbsd-configure.patch">patch</a> (i.e., if the
emacs source is in ~/src/emacs-src, you'll need to
<code>cd src &amp;&amp; patch -p1 &lt; emacs24-openbsd-configure.patch</code>) run autoconf on the
directory (<code>cd /path/to/emacs-source &amp;&amp; autoconf</code>). If you get a warning about
needing to provide an AUTOCONF_VERSION variable, then
<code>ls /usr/local/bin/autoconf-*</code> and <code>export AUTOCONF_VERSION=NN</code> where NN is
the highest number listed.</p>

<p>Liquid error: undefined method `join' for #<String:0x007ffd7ac9b268></p>

<p>Emacs may be built with the standard <code>./configure &amp;&amp; make &amp;&amp; make install</code> to
install to /usr/local.</p>

<h2>leiningen and clojure, or whereupon the wizards are summoned forth</h2>

<p>This takes a while, so while you are building emacs, go ahead and install
clojure via <a href="https://github.com/technomancy/leiningen">leiningen</a>:</p>

<p><code>curl https://raw.github.com/technomancy/leiningen/stable/bin/lein &gt; lein</code></p>

<p>Copy lein somewhere on your path (e.g. ~/bin/lein) and make it executable
 - <code>chmod +x ~/bin/lein</code>.</p>

<p>You'll want to install <a href="https://gihub.com/technomancy/swank-clojure">swank</a>.
As of this writing, the latest versions of clojure and swank-clojure are
1.4.0 and 1.4.2, respectively.</p>

<p>Liquid error: undefined method `join' for #<String:0x007ffd7ac9ad40></p>

<p>Once lein has finished, let's create a temporary project to test swank and
slime:</p>

<p><code>cd ~/tmp &amp;&amp; lein new testproject</code></p>

<p>Once emacs has finished installing, I recommend using bbatsov's
<a href="https://github.com/bbatsov/prelude">prelude</a> - if you have git, you only
need to run</p>

<p><code>curl -L https://github.com/bbatsov/prelude/raw/master/utils/installer.sh | sh</code></p>

<p>Otherwise, you'll need to install package.el - see
<a href="http://tromey.com/elpa/">ELPA</a>. I use
<a href="http://www.marmalade-repo.org">marmalade</a> instead of the vanilla ELPA install;
either way you will need to install
<a href="https://github.com/technomancy/clojure-mode/">clojure-mode</a>.</p>

<h2>Putting it to good use, or wherein the rubber meets the road</h2>

<p>Now fire up emacs. If you have the package manager installed (i.e. via prelude
or ELPA), check the list of available packages (<code>M-x package-list-packages</code>)
and install clojure-mode. Pull up ~/tmp/testproject/src/testproject/core.clj
and create a quick test function:</p>

<p>Liquid error: undefined method `join' for #<String:0x007ffd7aca2838></p>

<p>Fire up swank via <code>M-x clojure-jack-in</code>. If you get a long list of errors
with the last couple lines contains "NPT ERROR: Cannot open library", you
need to fix your jdk install:</p>

<p><code>ln -s /usr/local/jdk-1.7.0/jre/lib/amd64/libnpt.so /usr/local/lib/libnpt.so</code></p>

<p>You may need to change the jdk-1.7.0 directory above to the one relevant to
your system. (Thanks to Beau Holton for helping me to figure this one out!)</p>

<p>Once swank loads, invoke the SLIME compiler on the core.clj buffer via
<code>C-c C-k</code>. Once you see</p>

<p><code>user&gt;</code></p>

<p>run <code>(testproject.core/test-swank)</code>:</p>

<p>Liquid error: undefined method `join' for #<String:0x007ffd7aca2338></p>

<p>It may be useful to peruse the
<a href="http://common-lisp.net/project/slime/doc/html/">SLIME manual</a>.</p>

<p>Happy hacking!</p>

<p>Screenshots for the interested:</p>

<p><a href="/images/clojure-openbsd.png"><img src="/images/clojure-openbsd_thumb.png" alt="Clojure + SLIME in emacs24 on OpenBSD" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Aquamacs for Clojure]]></title>
    <link href="http://kisom.github.com/blog/2012/02/02/setting-up-aquamacs-for-clojure/"/>
    <updated>2012-02-02T20:03:00-07:00</updated>
    <id>http://kisom.github.com/blog/2012/02/02/setting-up-aquamacs-for-clojure</id>
    <content type="html"><![CDATA[<p>It took me a bit to get my <a href="http://www.aquamacs.org">Aquamacs</a> install
up and ready to do <a href="http://www.clojure.org">Clojure</a>
and <a href="http://common-lisp.net/project/slime/">SLIME</a>, so I figured I'd jot
some notes down for future me and anyone who happens to be listening.</p>

<!-- more -->


<p>I assume Aquamacs has been downloaded and
<a href="https://github.com/technomancy/leiningen">leiningen</a> is installed. First,
in a terminal, you'll need to install swank-clojure. As of today, the
current version is 1.4.0, but I strongly recommend you check the README
to see if there's a new version out. In the shell,
<code>lein plugin install swank-clojure "1.4.0"</code>.</p>

<p>I use <a href="http://marmalade-repo.org/">Marmalade</a> for package management, so
the first thing to do is to add Marmalade to Aquamacs. Open up
<code>"~/Library/Preferences/Aquamacs\ Emacs/Preferences.el"</code> in your editor
of choice (I used <a href="https://code.google.com/p/macvim/">MacVim</a>), and add
the folowing:</p>

<p>Liquid error: undefined method `join' for #<String:0x007ffd7aca1e38></p>

<p>I'm assuming you don't have <code>package.el</code> installed yet, so make sure to
Liquid error: undefined method `join' for #<String:0x007ffd7aca1938></p>

<p>Now fire up Aquamacs (or evaluate the additions to <code>Preferences.el</code> with
<code>C-x C-e</code>. <code>clojure-mode</code> needs to be installed, either via <code>M-x package-list-packages</code>,
and marking <code>clojure-mode</code> for installation (with <code>i</code>) and installing
(with <code>x</code>), or with <code>M-x package-refresh-contents</code> followed by
<code>M-x package-install clojure-mode</code>. I also like <code>paredit</code> but you
might not, it takes some getting used to.</p>

<p>Now, open up a file in your lein'd project and use <code>M-x clojure-jack-in</code>.
You might see some errors pop up in your <code>*Compile-Log*</code> buffer, but you
should be very shortly greeted with a REPL.</p>

<p>Happy hacking!</p>

<h2>The End Result</h2>

<p>Here's a screenshot of how it turned out (click to view it full-size):
<a href="/images/aquamacs-clojure.png"><img src="/images/aquamacs-clojure.t.png" alt="aquamacs-clojure thumbnail" /></a></p>

<p>I usually run aquamacs full-screen with two panes, left-side for editing
source code and right-size for SLIME.</p>

<h2>References</h2>

<p>I patched together my knowledge from a couple of pages:</p>

<ul>
<li>Incanter's article <a href="http://data-sorcery.org/2009/12/20/getting-started/">Setting up Clojure, Incanter, Emacs, Slime, Swank, and Paredit</a></li>
<li>The Doctor What's article <a href="http://docwhat.org/2011/08/aquamacs-2-3a-and-marmalade/">Aquamacs 2.3a and Marmalade</a></li>
<li>Phil Hagelberg's <a href="https://github.com/technomancy/swank-clojure">swank-clojure</a> <a href="https://github.com/technomancy/swank-clojure/blob/master/README.md">README</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[add .emacs.d/init.el]]></title>
    <link href="http://kisom.github.com/blog/2011/11/28/add-emacsd/"/>
    <updated>2011-11-28T00:00:00-07:00</updated>
    <id>http://kisom.github.com/blog/2011/11/28/add-emacsd</id>
    <content type="html"><![CDATA[<p>In the spirit of many of my online profiles which proudly declare "my
commit log is my blog," I've decided to start using that in my posts.
Here is the first such attempt.</p>

<pre><code> commit 40bbc533313a43192506b682fe546304d8603d11 
 Author: Kyle Isom &lt;coder@kyleisom.net&gt;
 Date:   Mon Nov 28 17:34:30 2011 +0300

    add .emacs.d/init.el
</code></pre>

<p>I've started using emacs, which is an act of such great blasphemy for
a red-blooded stalwart vim-wielding hacker such as myself that I find
it difficult to come to grips with sometimes. But there is a method to
my madness, and it isn't just that my morals are so comprised right
now in this nadir of my life that I've even started learning
javascript (a running joke).</p>

<!-- more -->


<p>Due to my current work situation, and the prospect of traveling to and
spending several months in a region with little to no network
connectivity, I've purchased a new 11" Macbook Air. I chose the 11"
model solely for price reasons; I would much prefer a larger
laptop. I've previously owned two EeePCs (the 7"
<a href="http://en.wikipedia.org/wiki/ASUS_Eee_PC#Eee_700_series">Eee PC 701</a>
and the 11"
<a href="http://en.wikipedia.org/wiki/ASUS_Eee_PC#Specifications">Eee PC 1101HAB</a>),
so I'm familiar with the smaller form-factor, and not a huge fan to be
honest.</p>

<p>Enter emacs - I can do all my work on emacs, with an integrated python
development environment incorporating a shell, pdb (with a pane that
shows the current line of the file being executed as you're stepping
through code). I'll still have the OS X desktop,
<a href="http://www.iterm2.com/">iterm2</a>,
<a href="http://tmux.sourceforge.net/">tmux</a>, and
<a href="http://code.google.com/p/macvim/">macvim</a>. But for getting things
done, I think that emacs is going to help out a lot.</p>

<p>Plus it's backed by a Lisp flavour.</p>
]]></content>
  </entry>
  
</feed>
